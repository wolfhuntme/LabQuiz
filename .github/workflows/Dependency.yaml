# PHP Dependency Scanning Job
dependency_scanning:
  stage: test
  image: php:8.2-cli
  before_script:
    # Install Composer if not already available
    - apt-get update && apt-get install -y git unzip
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    
    # Install security checker tool
    - composer global require enlightn/security-checker
    - export PATH="$PATH:$HOME/.composer/vendor/bin"
  
  script:
    # Check for vulnerabilities in composer dependencies
    - security-checker security:check composer.lock --format=json > security-report.json || true
    
    # Parse and display results
    - |
      if [ -f security-report.json ]; then
        echo "=== Security Vulnerabilities Found ==="
        cat security-report.json | php -r '
          $data = json_decode(file_get_contents("php://stdin"), true);
          if (empty($data)) {
            echo "✅ No security vulnerabilities found in dependencies\n";
            exit(0);
          }
          foreach ($data as $package => $vulns) {
            echo "\n❌ Package: $package\n";
            foreach ($vulns["advisories"] as $advisory) {
              echo "   - " . $advisory["title"] . "\n";
              echo "     CVE: " . ($advisory["cve"] ?? "N/A") . "\n";
              echo "     Link: " . $advisory["link"] . "\n";
            }
          }
          exit(1);
        '
      fi
    
    # Also check for outdated packages (optional)
    - composer outdated --direct
  
  artifacts:
    reports:
      dependency_scanning: security-report.json
    paths:
      - security-report.json
    when: always
    expire_in: 1 week
  
  allow_failure: true
  only:
    - main
    - develop
    - merge_requests